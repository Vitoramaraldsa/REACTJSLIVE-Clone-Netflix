[{"C:\\Projetos\\netflixclone\\src\\index.js":"1","C:\\Projetos\\netflixclone\\src\\App.js":"2","C:\\Projetos\\netflixclone\\src\\Tmdb.js":"3","C:\\Projetos\\netflixclone\\src\\components\\MovieRow.js":"4","C:\\Projetos\\netflixclone\\src\\components\\FeaturedMovie.js":"5","C:\\Projetos\\netflixclone\\src\\components\\Header.js":"6"},{"size":199,"mtime":1609946745532,"results":"7","hashOfConfig":"8"},{"size":2329,"mtime":1609982412425,"results":"9","hashOfConfig":"8"},{"size":2723,"mtime":1609946748522,"results":"10","hashOfConfig":"8"},{"size":1729,"mtime":1609980193153,"results":"11","hashOfConfig":"8"},{"size":1628,"mtime":1609964361906,"results":"12","hashOfConfig":"8"},{"size":642,"mtime":1609971952898,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1wznen3",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"16"},"C:\\Projetos\\netflixclone\\src\\index.js",[],["33","34"],"C:\\Projetos\\netflixclone\\src\\App.js",["35"],"import React, {useEffect, useState} from 'react';\r\nimport './App.css';\r\nimport Tmdb from './Tmdb';\r\nimport MovieRow from './components/MovieRow';\r\nimport FeaturedMovie from './components/FeaturedMovie';\r\nimport Header from './components/Header';\r\n\r\nexport default () => {\r\n\r\n    const [movieList, setMovieList] = useState([]);\r\n    const [featuredData,setFeaturedData] = useState(null);\r\n    const[blackHeader,setBlackHeader] = useState(false);\r\n\r\n    useEffect(()=> {\r\n    const loadall = async () => {\r\n    //pegando a lista total\r\n    let list = await Tmdb.getHomeList();\r\n    setMovieList(list);\r\n\r\n    //pegando o featured\r\n    let originals = list.filter(i=>i.slug === 'originals');\r\n    let reandomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\r\n    let chosen = originals[0].items.results[reandomChosen];\r\n    let chosenInfo = await Tmdb.getMovieInfo(chosen.id,'tv');\r\n    setFeaturedData(chosenInfo);\r\n    console.log(chosenInfo);\r\n    \r\n    }\r\n\r\n\r\n    loadall();\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n    const scrollListener = () => {\r\n        if(window.scrollY > 10){\r\n            setBlackHeader(true);\r\n        }else{\r\n            setBlackHeader(false);\r\n        }\r\n    }\r\n    window.addEventListener('scroll', scrollListener);\r\n\r\n    return ()=>{\r\n    window.removeEventListener('scroll',scrollListener);\r\n    }\r\n\r\n    },[]);\r\n\r\n    return(\r\n        <div className=\"page\">\r\n        <Header black={blackHeader} />\r\n\r\n        {featuredData &&\r\n            <FeaturedMovie item = {featuredData} />\r\n        }\r\n\r\n        <section className=\"lists\">\r\n         {movieList.map((item,key) => (\r\n             <MovieRow key={key} title={item.title} items={item.items} />\r\n         ))}   \r\n        </section>\r\n        <footer>\r\n            <div><p>Feito por Vitor amaral, agradecimentos ao Bonieky com lives educacionais e toda a comunidade ! <br/> Todos os direitos de imagem reservados para Netflix™, projeto realizado para fins didáticos.</p><br/>Dados obtidos pelo site: https://www.themoviedb.org/ </div>\r\n        </footer>\r\n        {movieList.length <= 0 &&\r\n        <div className=\"loading\">\r\n            <img src=\"https://media.wired.com/photos/592744d3f3e2356fd800bf00/master/w_600,c_limit/Netflix_LoadTime.gif\" alt=\"carregando\"/>\r\n        </div>\r\n        }\r\n        </div>\r\n    );\r\n}","C:\\Projetos\\netflixclone\\src\\Tmdb.js",["36"],"const API_KEY = '38c007f28d5b66f36b9c3cf8d8452a4b';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n/*\r\n- originais da netflix\r\n- recomendados (trending)\r\n- em alta (top rated)\r\n- ação \r\n- comédia\r\n- terro\r\n- romance \r\n- documentários \r\n*/\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\nexport default{\r\n    getHomeList: async () => {\r\n       return[\r\n           {\r\n             slug: 'originals',\r\n             title: 'Originais do Netflix',\r\n             items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n           },\r\n           {\r\n               slug: 'trending',\r\n               title: 'Recomendados para Você',\r\n               items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n           },\r\n           {\r\n               slug: 'toprated',\r\n               title: 'Em Alta',\r\n               items: await basicFetch(`/movie/top_rated?language=pt-br&api_key=${API_KEY}`)\r\n           },\r\n           {\r\n               slug: 'action',\r\n               title: 'Ação',\r\n               items: await basicFetch(`/discover/movie?with_genres=28&language=pt-br&api_key=${API_KEY}`)\r\n           },\r\n           {\r\n               slug: 'comedy',\r\n               title: 'Comédia', \r\n               items: await basicFetch(`/discover/movie?with_genres=35&language=pt-br&api_key=${API_KEY}`)\r\n           },\r\n           {\r\n               slug: 'horror',\r\n               title: 'Terror para Você',\r\n               items: await basicFetch(`/discover/movie?with_genres=27&language=pt-br&api_key=${API_KEY}`)\r\n           },\r\n           {\r\n               slug: 'romance',\r\n               title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-br&api_key=${API_KEY}`)\r\n           },\r\n           {\r\n               slug: 'domcumentary',\r\n               title: 'Documentários',\r\n               items: await basicFetch(`/discover/movie?with_genres=99&language=pt-br&api_key=${API_KEY}`)\r\n           },\r\n       ];\r\n    },\r\n    \r\n    getMovieInfo: async (movieId,type) => {\r\n        let info = {};\r\n\r\n        if(movieId){\r\n            switch(type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                default:\r\n                    info = null;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return info;\r\n    }\r\n}","C:\\Projetos\\netflixclone\\src\\components\\MovieRow.js",["37"],"import React, {useState} from 'react';\r\nimport './MovieRow.css';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nexport default ({title,items}) => {\r\n    const[scrollx,setscrollx] = useState(-400);\r\n    const handleLeftArrow = () =>{\r\n        let x = scrollx + Math.round(window.innerWidth / 2);\r\n        if(x > 0){\r\n            x = 0;\r\n        }\r\n        setscrollx(x);\r\n    }\r\n\r\n    const handlerightArrow = ()=>{\r\n        let x = scrollx - Math.round(window.innerWidth / 2);\r\n        let listW = items.results.length * 150;\r\n        if((window.innerWidth - listW) > x){\r\n            x = (window.innerWidth - listW) - 60;\r\n        }\r\n        setscrollx(x);\r\n    }\r\n\r\n    return(\r\n        <div className=\"movieRow\">\r\n           <h2>{title}</h2>\r\n           \r\n           <div className=\"movieRow--left\" onClick={handleLeftArrow}>\r\n            <NavigateBeforeIcon style={{fontSize: 50}} />\r\n           </div>\r\n\r\n           <div className=\"movieRow--right\" onClick={handlerightArrow}>\r\n            <NavigateNextIcon style={{fontSize: 50}} />\r\n           </div>\r\n\r\n           <div className=\"movieRow--listarea\">\r\n               <div className=\"movieRow--list\" style={{\r\n                   marginLeft: scrollx,\r\n                   width: items.results.length * 150\r\n               }}>\r\n               {items.results.length > 0 && items.results.map((item, key)=>\r\n               <div key={key} className=\"movieRow--item\">\r\n                <img  src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\r\n                </div>\r\n                )}\r\n             </div> \r\n           </div>\r\n        </div>\r\n    );\r\n}","C:\\Projetos\\netflixclone\\src\\components\\FeaturedMovie.js",["38","39"],"import react from 'react';\r\nimport './FeaturedMovie.css';\r\n\r\nexport default ({item}) =>{\r\n    let fistDate = new Date(item.first_air_date);\r\n    let genres =[];\r\n    for(let i in item.genres){\r\n        genres.push(item.genres[i].name);\r\n    }\r\n    return(\r\n       <section className=\"featured\" style={{\r\n           backgroundSize: 'cover',\r\n           backgroundPosition: 'center',\r\n           backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n       }}>\r\n           <div className=\"featured--vertical\">\r\n             <div className=\"featured--horizontal\">\r\n                <div className=\"featured--name\">{item.original_name}</div>\r\n                <div className=\"featured--info\">\r\n                    <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n                    <div className=\"featured--year\">{fistDate.getFullYear()}</div>\r\n                    <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\r\n                </div>\r\n                    <div className=\"featured--description\">{item.overview}</div>\r\n                    <div className=\"featured--buttons\">\r\n                    <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">► Assistir</a>\r\n                    <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\r\n                    </div>\r\n                    <div className=\"featured--genres\"><strong>Gêneros: </strong>{genres.join(', ')}</div>\r\n              </div>\r\n           </div>\r\n           \r\n          \r\n       </section>\r\n    );\r\n}",["40","41"],"C:\\Projetos\\netflixclone\\src\\components\\Header.js",["42","43"],"import react from 'react';\r\nimport './Header.css';\r\n\r\nexport default ({black}) => {\r\n    return (\r\n        <header className={black ? 'black' : ''}>\r\n            <div className=\"header--logo\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://logospng.org/download/netflix/logo-netflix-256.png\" alt=\"Netflix\"/>\r\n                </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" alt=\"usuario\"/>\r\n                </a>\r\n            </div>\r\n        </header>\r\n    );\r\n}",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":8,"column":1,"nodeType":"50","endLine":73,"endColumn":2},{"ruleId":"48","severity":1,"message":"51","line":21,"column":1,"nodeType":"50","endLine":86,"endColumn":2},{"ruleId":"48","severity":1,"message":"49","line":6,"column":1,"nodeType":"50","endLine":51,"endColumn":2},{"ruleId":"52","severity":1,"message":"53","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":13},{"ruleId":"48","severity":1,"message":"49","line":4,"column":1,"nodeType":"50","endLine":36,"endColumn":2},{"ruleId":"44","replacedBy":"56"},{"ruleId":"46","replacedBy":"57"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":13},{"ruleId":"48","severity":1,"message":"49","line":4,"column":1,"nodeType":"50","endLine":19,"endColumn":2},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-unused-vars","'react' is defined but never used.","Identifier","unusedVar",["58"],["59"],"no-global-assign","no-unsafe-negation"]